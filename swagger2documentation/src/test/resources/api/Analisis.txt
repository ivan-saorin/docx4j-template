[main] INFO v2.io.swagger.parser.Swagger20Parser - reading from /api/account-information_eidasOnly-1.3.yaml
[main] INFO org.apitooling.export.AnalysisLoggerExporter - 

   **************************************************************************************************************************************
   Consent-ID
         HEADER GET /
            *Consent-ID:string
            Shall be contained since "Establish Consent Transaction" was performed via this API before.
         HEADER GET /{account-id}/transactions
            *Consent-ID:string
            Shall be contained since "Establish Consent Transaction" was performed via this API before.
         HEADER GET /{account-id}
            *Consent-ID:string
            Shall be contained since "Establish Consent Transaction" was performed via this API before.
         HEADER GET /{account-id}/balances
            *Consent-ID:string
            Shall be contained since "Establish Consent Transaction" was performed via this API before.
   Accept
         HEADER GET /{account-id}/transactions
            Accept:string
            The TPP can indicate the formats of account reports supported together with a priorisation following the HTTP header definition.
The formats supported by this specification are
* xml
* JSON
* text
**Remark**: in the next version of the specification. This shall enable the TPP to address different camt.05x versions or different MT94x versions in a corporate context. The TPP then could e.g. say: "I prefer MT942, but take MT940 if MT942 is not available.
   X-Request-ID
         HEADER GET /
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
         HEADER GET /{account-id}/transactions
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
         HEADER GET /{account-id}
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
         HEADER GET /{account-id}/balances
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
   Digest
         HEADER GET /
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER GET /{account-id}/transactions
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER GET /{account-id}
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER GET /{account-id}/balances
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
   account-id
         PATH GET /{account-id}/transactions
            *account-id:string
            This identification is denoting the addressed account. The account-id is retrieved by using a "Read Account List" call. The account-id is the "resourceId" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.
**Remark**: This account-id can be a tokenised identification due to data protection reason since the path information might be logged on intermediary servers within the ASPSP sphere. The account-id is constant  at least throughout the lifecycle of a given consent.
         PATH GET /{account-id}
            *account-id:string
            This identification is denoting the addressed account. The account-id is retrieved by using a "Read Account List" call. The account-id is the "resourceId" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.
**Remark**: This account-id can be a tokenised identification due to data protection reason since the path information might be logged on intermediary servers within the ASPSP sphere. The account-id is constant  at least throughout the lifecycle of a given consent.
         PATH GET /{account-id}/balances
            *account-id:string
            This identification is denoting the addressed account. The account-id is retrieved by using a "Read Account List" call. The account-id is the "resourceId" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.
**Remark**: This account-id can be a tokenised identification due to data protection reason since the path information might be logged on intermediary servers within the ASPSP sphere. The account-id is constant  at least throughout the lifecycle of a given consent.
   TPP-Signature-Certificate
         HEADER GET /
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above. Descriptions of error components.
         HEADER GET /{account-id}/transactions
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above. Descriptions of error components.
         HEADER GET /{account-id}
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above. Descriptions of error components.
         HEADER GET /{account-id}/balances
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above. Descriptions of error components.
   dateFrom
         QUERY GET /{account-id}/transactions
            dateFrom:string<date>
            Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required
   Authorization
         HEADER GET /
            Authorization:string
            Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.
         HEADER GET /{account-id}/transactions
            Authorization:string
            Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.
         HEADER GET /{account-id}
            Authorization:string
            Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.
         HEADER GET /{account-id}/balances
            Authorization:string
            Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.
   entryReferenceFrom
         QUERY GET /{account-id}/transactions
            entryReferenceFrom:string
            This data attribute is indicating that the AISP is in favour to get all transactions after the transaction with identification `entryReferenceFrom` alternatively to the above defined period. This is a implementation of a delta access. If this data element is contained, the entries `dateFrom` and `dateTo` might be ignored by the ASPSP if a delta report is supported.
   deltaList
         QUERY GET /{account-id}/transactions
            deltaList:string
            This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report.
This delta indicator might be rejected by the ASPSP if this function is not supported.
   Signature
         HEADER GET /
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER GET /{account-id}/transactions
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER GET /{account-id}
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER GET /{account-id}/balances
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
   dateTo
         QUERY GET /{account-id}/transactions
            dateTo:string<date>
            End date (inclusive the data dateTo) of the transaction list, default is now if not given.
   bookingStatus
         QUERY GET /{account-id}/transactions
            *bookingStatus:string
            Permitted codes are `booked`, `pending` and `both`.
**`booked` shall be supported by the ASPSP.**
To support the "pending" and "both" feature is optional for the ASPSP, Error code if not supported in the online banking frontend
   withBalance
         QUERY GET /{account-id}
            withBalance:string
            If contained, this function reads the details of the addressed account including the booking balance, if granted by the PSU's consent and if supported by ASPSP. This data element might be ignored by the ASPSP.
         QUERY GET /
            withBalance:string
            If contained, this function reads the list of accessible payment accounts including the booking balance, if granted by the PSU in the related consent and available by the ASPSP. This parameter might be ignored by the ASPSP.
   PSU-IP-Address
         HEADER GET /
            *PSU-IP-Address:string<ipv4>
            The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.

         HEADER GET /{account-id}/transactions
            *PSU-IP-Address:string<ipv4>
            The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.

         HEADER GET /{account-id}
            *PSU-IP-Address:string<ipv4>
            The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.

         HEADER GET /{account-id}/balances
            *PSU-IP-Address:string<ipv4>
            The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.

   **************************************************************************************************************************************
   
[main] INFO v2.io.swagger.parser.Swagger20Parser - reading from /api/consents-eidasOnly_1.3.yaml
[main] INFO org.apitooling.export.AnalysisLoggerExporter - 

   **************************************************************************************************************************************
   (v)TPP-Nok-RedirectURI (transformed in $ref)
         HEADER POST /
            TPP-Nok-RedirectURI:string
            null
   (v)X-Request-ID
         HEADER PUT /{consentId}
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
         HEADER GET /{consentId}
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
         HEADER DELETE /{consentId}
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
         HEADER GET /{consentId}/status
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
         HEADER POST /
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
Example: `X-Request-ID: 013a8658-f70f-4d54-9144-4d14300fbf85`
   (v)Digest (transformed in $ref)
         HEADER PUT /{consentId}
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER GET /{consentId}
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER GET /{consentId}/status
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER POST /
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
	(v)PSU-Corporate-ID-Type (transformed in $ref)
         HEADER PUT /{consentId}
            PSU-Corporate-ID-Type:string
            This is describing the type of the identification needed by the ASPSP to identify the PSU-Corporate-ID content.
Mean and use is defined in the ASPSP's documentation. Only used in a corporate context.
         HEADER POST /
            PSU-Corporate-ID-Type:string
            Might be mandated in the ASPSP's documentation. Only used in a corporate context.
	(v)TPP-Redirect-Preferred (transformed in $ref)
         HEADER POST /
            TPP-Redirect-Preferred:boolean
            If it equals "true", the TPP prefers a           redirect over an embedded SCA approach. If it equals "false", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU.  If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.
   (v)PSU-ID (transformed in $ref)
         HEADER PUT /{consentId}
            PSU-ID:string
            'Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation. Is not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding AIS service in the same session.
         HEADER POST /
            PSU-ID:string
            Client ID of the PSU in the ASPSP client interface.
   (v)TPP-Signature-Certificate (transformed in $ref)
         HEADER PUT /{consentId}
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above. Descriptions of error components
         HEADER GET /{consentId}
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above. Descriptions of error components
         HEADER GET /{consentId}/status
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above. Descriptions of error components
         HEADER POST /
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above. Descriptions of error components
   (v)PSU-Corporate-ID (transformed in $ref)
         HEADER PUT /{consentId}
            PSU-Corporate-ID:string
            Identification of a Corporate in the Online Channels
Might be mandated in the ASPSP's documentation. Only used in a corporate context.
         HEADER POST /
            PSU-Corporate-ID:string
            Might be mandated in the ASPSP's documentation. Only used in a corporate context.
   (v) Authorization (transformed in $ref)
         HEADER PUT /{consentId}
            Authorization:string
            Bearer Token. Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.
         HEADER DELETE /{consentId}
            Authorization:string
            Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.
         HEADER POST /
            Authorization:string
            Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.
   (v) consentId
         PATH GET /{consentId}/status
            *consentId:string
            The consent identification assigned to the created resource.
         PATH DELETE /{consentId}
            *consentId:string
            The consent identification assigned to the created resource.
         PATH PUT /{consentId}
            *consentId:string
            The consent identification assigned to the created resource.
         PATH GET /{consentId}
            *consentId:string
            The consent identification assigned to the created resource.
   (v) PSU-ID-Type (transformed in $ref)
         HEADER PUT /{consentId}
            PSU-ID-Type:string
            Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.
In this case, the mean and use is then defined in the ASPSP's documentation. |- The identifier of product of the target bank backend Valid values are:

  | Target bank backend                                           | Value             |
  |---------------------------------------------------------------|-------------------|
  | Unicredit                                                     | ALL               |
  | Unicredit - Buddy Bank                                        | ALL               |
  | Bank Austria - 24 You                                         | 24YOU             |
  | Bank Austria - BusinessNet                                    | BUSINESSNET       |
  | Bank Austria - UC eBanking Global                             | UCEBANKINGGLOBAL  |
  | Hypovereinsbank - HVB Online Banking                          | HVB_ONLINEBANKING |
  | Hypovereinsbank - UC eBanking Global                          | UCEBANKINGGLOBAL  |
  | Zagrebacka banka d.d. - Retail                                | ZB_RETAIL         |
  | Zagrebacka banka d.d. - Corporate                             | ZB_CORPORATE      |
  | UniCredit Bank Hungary Zrt.                                   | ALL               |
  | UniCredit Bank Romania                                        | ALL               |
  | UniCredit Bank Slovenia                                       | ALL               |
  | UniCredit Bulbank                                             | ALL               |
  | UniCredit Bank Czech Republic and Slovakia, a.s. (Czech Rep.) | ALL               |
  | UniCredit Bank Czech Republic and Slovakia, a.s. (Slovakia)   | ALL               |
         HEADER POST /
            *PSU-ID-Type:string
            Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.
In this case, the mean and use is then defined in the ASPSP's documentation. |- The identifier of product of the target bank backend Valid values are:

  | Target bank backend                                           | Value             |
  |---------------------------------------------------------------|-------------------|
  | Unicredit                                                     | ALL               |
  | Unicredit - Buddy Bank                                        | ALL               |
  | Bank Austria - 24 You                                         | 24YOU             |
  | Bank Austria - BusinessNet                                    | BUSINESSNET       |
  | Bank Austria - UC eBanking Global                             | UCEBANKINGGLOBAL  |
  | Hypovereinsbank - HVB Online Banking                          | HVB_ONLINEBANKING |
  | Hypovereinsbank - UC eBanking Global                          | UCEBANKINGGLOBAL  |
  | Zagrebacka banka d.d. - Retail                                | ZB_RETAIL         |
  | Zagrebacka banka d.d. - Corporate                             | ZB_CORPORATE      |
  | UniCredit Bank Hungary Zrt.                                   | ALL               |
  | UniCredit Bank Romania                                        | ALL               |
  | UniCredit Bank Slovenia                                       | ALL               |
  | UniCredit Bulbank                                             | ALL               |
  | UniCredit Bank Czech Republic and Slovakia, a.s. (Czech Rep.) | ALL               |
  | UniCredit Bank Czech Republic and Slovakia, a.s. (Slovakia)   | ALL               |
   (v) Signature
         HEADER PUT /{consentId}
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER GET /{consentId}
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER GET /{consentId}/status
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER POST /
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
   (v) TPP-Redirect-URI
         HEADER POST /
            TPP-Redirect-URI:string
            URI of the TPP, where the transaction flow shall be redirected to after a Redirect.
 Mandatory for the SCA OAuth Approach.
 - $ref: '#/parameters/Content-Type'
   Content-Type
         HEADER PUT /{consentId}
            Content-Type:string
            Chosen content type JSON, for XML use payment_product
   **************************************************************************************************************************************
   
[main] INFO v2.io.swagger.parser.Swagger20Parser - reading from /api/payment_initiation_eidasOnly_1.13.yaml
[main] INFO org.apitooling.export.AnalysisLoggerExporter - 

   **************************************************************************************************************************************
   (v)(?)Consent-ID (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}		 
            Consent-ID:string
            This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service. This then contains the "consentId" of the related AIS consent, which was performed prior to this payment initiation.
			(?)Under clarification see mail Ivan 20190109 15.28
         HEADER POST /{payment-product}
            Consent-ID:string
            This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service. This then contains the "consentId" of the related AIS consent, which was performed prior to this payment initiation.
			(?)Under clarification see mail Ivan 20190109 15.28
   (v) X-Request-ID  (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.This is the unique ID of TPP for the payment initiation regarding PSD2 article 46b, 47 and EBA RTS article 29.
         HEADER PUT /{payment-product}/{paymentId}
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.This is the unique ID of TPP for the payment initiation regarding PSD2 article 46b, 47 and EBA RTS article 29.
         HEADER GET /{payment-product}/{paymentId}/status
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.
         HEADER POST /{payment-product}
            *X-Request-ID:string<uuid>
            ID of the request, unique to the call, as determined by the initiating party.This is the unique ID of TPP for the payment initiation regarding PSD2 article 46b, 47 and EBA RTS article 29.
	(v)Digest (changed description)
         HEADER GET /{payment-product}/{paymentId}
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER PUT /{payment-product}/{paymentId}
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER GET /{payment-product}/{paymentId}/status
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
         HEADER POST /{payment-product}
            Digest:string
            When a TPP includes a signature as defined in [signHTTP], chapter 4, he also must include a "Digest" header as defined in [RFC3230](https://www.rfc-editor.org/rfc/rfc3230.txt). The "Digest" Header contains a Hash of the message body. The only hash algorithms that may be used to calculate the Digest within the context of this specification are SHA-256 and SHA-512 as defined in [RFC5843](https://www.rfc-editor.org/rfc/rfc5843.txt)
   (v)PSU-Corporate-ID-Type (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}
            PSU-Corporate-ID-Type:string
            This is describing the type of the identification needed by the ASPSP to identify the PSU-Corporate-ID content.
Mean and use is defined in the ASPSP's documentation. Only used in a corporate context.
         HEADER PUT /{payment-product}/{paymentId}
            PSU-Corporate-ID-Type:string
            This is describing the type of the identification needed by the ASPSP to identify the PSU-Corporate-ID content.
Mean and use is defined in the ASPSP's documentation. Only used in a corporate context.
         HEADER POST /{payment-product}
            PSU-Corporate-ID-Type:string
            This is describing the type of the identification needed by the ASPSP to identify the PSU-Corporate-ID content.
Mean and use is defined in the ASPSP's documentation. Only used in a corporate context.
   (v)TPP-Redirect-Preferred (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}
            TPP-Redirect-Preferred:string
            If it equals "true", the TPP prefers a redirect over an embedded SCA approach. If it equals "false", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU.  If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.
         HEADER POST /{payment-product}
            TPP-Redirect-Preferred:string
            If it equals "true", the TPP prefers a           redirect over an embedded SCA approach. If it equals "false", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU.  If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.
   (v)PSU-ID (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}
            PSU-ID:string
            Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation. Is not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding AIS service in the same session.
         HEADER PUT /{payment-product}/{paymentId}
            PSU-ID:string
            Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation. Is not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding AIS service in the same session.
         HEADER POST /{payment-product}
            PSU-ID:string
            Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation. Is not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding AIS service in the same session.
   (v)TPP-Signature-Certificate (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. Must be contained if a signature is contained, see above.
         HEADER PUT /{payment-product}/{paymentId}
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. Must be contained if a signature is contained, see above.
         HEADER GET /{payment-product}/{paymentId}/status
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. Must be contained if a signature is contained, see above.
         HEADER POST /{payment-product}
            TPP-Signature-Certificate:string
            The certificate used for signing the request, in base64 encoding. Must be contained if a signature is contained, see above.
   (v)PSU-Corporate-ID (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}
            PSU-Corporate-ID:string
            Identification of a Corporate in the Online Channels
Might be mandated in the ASPSP's documentation. Only used in a corporate context.
         HEADER PUT /{payment-product}/{paymentId}
            PSU-Corporate-ID:string
            Identification of a Corporate in the Online Channels
Might be mandated in the ASPSP's documentation. Only used in a corporate context.
         HEADER POST /{payment-product}
            PSU-Corporate-ID:string
            Identification of a Corporate in the Online Channels
Might be mandated in the ASPSP's documentation. Only used in a corporate context.
   (v)payment-product
         PATH GET /{payment-product}/{paymentId}/status
            *payment-product:string
            The addressed payment product, e.g. SCT.
The default list of products supported in this standard is:
  - sepa-credit-transfers
  - instant-sepa-credit-transfers
  - target-2-payments
  - cross-border-credit-transfers

Further products might be published by the ASPSP within its XS2A documentation.
         PATH PUT /{payment-product}/{paymentId}
            *payment-product:string
            The addressed payment product, e.g. SCT.
The default list of products supported in this standard is:
  - sepa-credit-transfers
  - instant-sepa-credit-transfers
  - target-2-payments
  - cross-border-credit-transfers

Further products might be published by the ASPSP within its XS2A documentation.
         PATH GET /{payment-product}/{paymentId}
            *payment-product:string
            The addressed payment product, e.g. SCT.
The default list of products supported in this standard is:
  - sepa-credit-transfers
  - instant-sepa-credit-transfers
  - target-2-payments
  - cross-border-credit-transfers

Further products might be published by the ASPSP within its XS2A documentation.
         PATH POST /{payment-product}
            *payment-product:string
            The addressed payment product, e.g. SCT.
The default list of products supported in this standard is:
  - sepa-credit-transfers
  - instant-sepa-credit-transfers
  - target-2-payments
  - cross-border-credit-transfers

Further products might be published by the ASPSP within its XS2A documentation.
   (v)Authorization (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}
            Authorization:string
            Bearer Token. Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.
         HEADER PUT /{payment-product}/{paymentId}
            Authorization:string
            Bearer Token. Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.
         HEADER GET /{payment-product}/{paymentId}/status
            Authorization:string
            Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the current PIS transaction or in a preceding AIS service in the same session, if no such OAuth2 SCA approach was chosen in the current PIS transaction.
         HEADER POST /{payment-product}
            Authorization:string
            Bearer Token. Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceding AIS service in the same session.
    (v)TPP-Nok-Redirect-URI (transformed in $ref) (errata Ignored transformed Optional)
         HEADER GET /{payment-product}/{paymentId}
            TPP-Nok-Redirect-URI:string
            If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case of a negative result of the redirect SCA method. This might be ignored by the ASPSP.
         HEADER POST /{payment-product}
            TPP-Nok-Redirect-URI:string
            If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case of a negative result of the redirect SCA method. This might be ignored by the ASPSP.
	(v)PSU-ID-Type (transformed in two $ref one for optional and one for mandatory)
         HEADER GET /{payment-product}/{paymentId}
            PSU-ID-Type:string
            Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.
In this case, the mean and use is defined in the ASPSP's documentation.
         HEADER PUT /{payment-product}/{paymentId}
            PSU-ID-Type:string
            Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.
In this case, the mean and use is then defined in the ASPSP's documentation.
         HEADER POST /{payment-product}
            *PSU-ID-Type:string
            Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.
In this case, the mean and use is then defined in the ASPSP's documentation. |- The identifier of product of the target bank backend Valid values are:

  | Target bank backend                                           | Value             |
  |---------------------------------------------------------------|-------------------|
  | Unicredit                                                     | ALL               |
  | Unicredit - Buddy Bank                                        | ALL               |
  | Bank Austria - 24 You                                         | 24YOU             |
  | Bank Austria - BusinessNet                                    | BUSINESSNET       |
  | Bank Austria - UC eBanking Global                             | UCEBANKINGGLOBAL  |
  | Hypovereinsbank - HVB Online Banking                          | HVB_ONLINEBANKING |
  | Hypovereinsbank - UC eBanking Global                          | UCEBANKINGGLOBAL  |
  | Zagrebacka banka d.d. - Retail                                | ZB_RETAIL         |
  | Zagrebacka banka d.d. - Corporate                             | ZB_CORPORATE      |
  | UniCredit Bank Hungary Zrt.                                   | ALL               |
  | UniCredit Bank Romania                                        | ALL               |
  | UniCredit Bank Slovenia                                       | ALL               |
  | UniCredit Bulbank                                             | ALL               |
  | UniCredit Bank Czech Republic and Slovakia, a.s. (Czech Rep.) | ALL               |
  | UniCredit Bank Czech Republic and Slovakia, a.s. (Slovakia)   | ALL               |
   (v)paymentId
         PATH GET /{payment-product}/{paymentId}/status
            *paymentId:string
            Resource Identification of the related payment.
         PATH PUT /{payment-product}/{paymentId}
            *paymentId:string
            Resource Identification of the related payment.
         PATH GET /{payment-product}/{paymentId}
            *paymentId:string
            Resource Identification of the related payment.
   (v)Signature
         HEADER GET /{payment-product}/{paymentId}
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER PUT /{payment-product}/{paymentId}
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER GET /{payment-product}/{paymentId}/status
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
         HEADER POST /{payment-product}
            Signature:string
            As defined in [signHTTP], chapter 4, a "Signature" header must be present. The structure of a "Signature" header is defined in [signHTTP], chapter 4.1, the following table lists the requirements on the "Signature" header from [signHTTP] and additional requirements specific to the PSD2-Interface.
    (v)PSU-IP-Address (transformed in $ref)
         HEADER GET /{payment-product}/{paymentId}
            *PSU-IP-Address:string
            The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.
If not available, the TPP shall use the IP address when submitting this request.
         HEADER POST /{payment-product}
            *PSU-IP-Address:string
            The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.
If not available, the TPP shall use the IP address when submitting this request.
   <v>Content-Type (transformed in two $ref one for optional and one for mandatory)
         HEADER GET /{payment-product}/{paymentId}
            *Content-Type:string
            Chosen content type JSON, for XML use payment_product
         HEADER PUT /{payment-product}/{paymentId}
            Content-Type:string
            Chosen content type JSON, for XML use payment_product
         HEADER POST /{payment-product}
            *Content-Type:string
            Chosen content type JSON, for XML use payment_product
   (v)TPP-Redirect-URI
         HEADER GET /{payment-product}/{paymentId}
            TPP-Redirect-URI:string
            URI of the TPP, where the transaction flow shall be redirected to after a Redirect.Mandatory for the SCA OAuth Approach.
         HEADER POST /{payment-product}
            *TPP-Redirect-URI:string
            URI of the TPP, where the transaction flow shall be redirected to after a Redirect.Mandatory for the SCA OAuth Approach.
   **************************************************************************************************************************************
